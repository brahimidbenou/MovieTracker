@page "/ListFilms"
@using FrontEnd.Components.Shared
@inject NavigationManager NavigationManager
@inject GetFilms FilmService
@inject FavoritesService favoris
@inject AuthProvider AuthStateProvider

<style>
    .film-list-container {
        padding: 2rem 0;
        background-color: #1a1d20;
        min-height: 100vh;
    }

    .film-card {
        background: #909396;
        border: none;
        border-radius: 15px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .film-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.2);
    }

    .card-img-top {
        border-top-left-radius: 15px;
        border-top-right-radius: 15px;
        height: 400px;
        object-fit: cover;
        background-color: #343a40;
    }

    .card-body {
        padding: 1.5rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-title {
        color: #fff;
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .btn-favorite {
        background: linear-gradient(45deg, #ff6b6b, #ff8787);
        border: none;
        border-radius: 25px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-favorite:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 15px rgba(255,107,107,0.3);
    }

    .loading-text {
        color: #fff;
        font-size: 1.5rem;
        text-align: center;
        margin-top: 3rem;
    }
</style>

<div class="film-list-container">
    <div class="container">
        <h3 class="text-white mb-5 text-center display-4">Collection des films</h3>

        @if (films == null)
        {
            <div class="loading-text">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <div class="mt-2">Chargement des films...</div>
            </div>
        }
        else if (!films.Any())
        {
            <div class="alert alert-info text-center">Aucun film disponible pour le moment</div>
        }
        else
        {
            <div class="row g-4">
                @foreach (var film in films)
                {
                    <div class="col-lg-4 col-md-6">
                        <div class="film-card">
                            <img src="@film.Poster" class="card-img-top" alt="@film.Title">
                            <div class="card-body">
                                <h5 class="card-title">@film.Title <span class="text-muted">(@film.Year)</span></h5>
                                <button @onclick=" () => AddTo(film.Id)" class="btn btn-favorite">
                                    <i class="bi bi-heart-fill"></i>
                                    Ajouter aux favoris
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    private List<Film> films = new();
    private string errorMessage="";
    protected override async Task OnInitializedAsync()
    {
        try
        {
            films = await FilmService.GetAllFilms();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur: {ex.Message}");
        }
    }  


    private async Task AddTo(int filmId)
    {
        try
        {
            int id = await AuthStateProvider.GetIdAsync();
            if (id != 0) 
            {
                var succes = await favoris.AddToFavorites(filmId, id);
                errorMessage = succes? "Ajout√© aux favoris !" : "Erreur lors de l'ajout";
                NavigationManager.NavigateTo("/Favorites");
            }
            else 
            {
                NavigationManager.NavigateTo("/Login");
            }
            

        }
        catch (Exception ex)
        {
            errorMessage = $"Erreur: {ex.Message}";
        }
    } 
}




